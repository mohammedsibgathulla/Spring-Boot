1. Spring Boot Runners
- Application Runner and Command Line Runner interfaces lets you to execute the code after the Spring Boot application is started. You can use these interfaces to perform any actions immediately after the application has started.
- The difference between CommandLineRunner and ApplicationRunner is that the run() method of CommandLineRunner accepts array of String as an argument and run() method of ApplicationRunner accepts spring ApplicationArguments as an argument.

2. Command Line Properties
- Spring Boot application converts the command line properties into Spring Boot Environment properties.
- Command line properties take precedence over the other property sources.
- java -jar demo-0.0.1-SNAPSHOT.jar --server.port=9090

3. Spring Boot Application Properties
- Spring Boot supports both formats .properties and .yaml.

4. Externalized Properties
- Instead of keeping the properties file under classpath, we can keep the properties in different location or path.
- While running the JAR file, we can specify the properties file path. You can use the following command to specify the location of properties file while running the JAR file
- -Dspring.config.location = C:\application.properties
- java -jar -Dspring.config.location = C:\application.properties demo-0.0.1-SNAPSHOT.jar --server.port=9090

5. Use of @Value Annotation
- The @Value annotation is used to read the environment or application property value in Java code.
- To resolve the placeholder issue, we can set the default value for the property @Value("${property_key_name:default_value}")

6. Spring Boot Active Profile For application.properties
- Spring Boot application uses the application.properties by default.
- The command to set the spring active profile is java -jar demo-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev

7. Spring Boot Active Profile For application.yml
- We can keep the Spring active profile properties in the single application.yml file.
- The command to set the spring active profile is java -jar demo-0.0.1-SNAPSHOT.jar --spring.profiles.active=dev

